{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arbre\\\\OneDrive\\\\Desktop\\\\inspire11mk-internship-arbresha-ajrulla\\\\finalreact2\\\\src\\\\components\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport BookCard from \"./BookCard\";\nimport axios from \"axios\";\nimport SortBookCards from \"./SortBookCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [books, setBooks] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [sortbutton, setSortButton] = useState(false);\n  const [showSortComponent, setShowSortComponent] = useState(false);\n  const [favorites, setFavorites] = useState([]);\n  const [showFavorites, setShowFavorites] = useState(false);\n  const fetchBooks = async () => {\n    try {\n      setLoading(true);\n      setProgress(0);\n\n      // Simulate a 3-second delay\n      const duration = 3000;\n      const startTime = Date.now();\n\n      // Function to update progress\n      const updateProgress = () => {\n        const currentTime = Date.now();\n        const elapsedTime = currentTime - startTime;\n        const percentage = Math.min(elapsedTime / duration * 100, 100);\n        setProgress(percentage);\n      };\n\n      // Start updating progress every 100 milliseconds\n      const progressInterval = setInterval(updateProgress, 100);\n      const response = await axios.get(\"https://www.anapioficeandfire.com/api/books?pageSize=30\");\n\n      // Clear the progress update interval when the request is complete\n      clearInterval(progressInterval);\n      console.log(response.data);\n      setBooks(response.data);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    } finally {\n      setLoading(false);\n      // Set progress to 100% when data fetching is complete\n      setProgress(100);\n      setShowSortComponent(true);\n      setSortButton(false); // Reset sortbutton to false when fetching new data\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Game of Thrones Books\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Fetch a list from an API and display it\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"fetch-button\",\n      onClick: fetchBooks,\n      disabled: loading,\n      children: [loading ?\n      /*#__PURE__*/\n      // Display a spinner when loading\n      _jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this) : progress === 100 ?\n      // Display \"Books\" when progress is 100%\n      \"Books\" :\n      // Display \"Fetch Data\" otherwise\n      \"Fetch Data\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"percentage\",\n        children: [progress.toFixed(0), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttons\",\n        onClick: () => setShowFavorites(!showFavorites),\n        children: \"Favorites\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), showSortComponent && !sortbutton && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttons\",\n        onClick: () => setSortButton(true),\n        children: \"Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), showFavorites && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: favorites.map((favoriteBook, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"The \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(BookCard, {\n          book: favoriteBook,\n          nr: index + 1,\n          favorites: favorites,\n          setFavorites: setFavorites\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this)]\n      }, favoriteBook.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), showSortComponent && !showFavorites && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: sortbutton ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-container\",\n        children: /*#__PURE__*/_jsxDEV(SortBookCards, {\n          books: books\n        }, books.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-container\",\n        children: books.map((book, index) => /*#__PURE__*/_jsxDEV(BookCard, {\n          book: book,\n          nr: index + 1,\n          favorites: favorites,\n          setFavorites: setFavorites\n        }, book.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OjkxGiPqrUj+Y/AaJ2kktEFUtMs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BookCard","axios","SortBookCards","jsxDEV","_jsxDEV","App","_s","books","setBooks","loading","setLoading","progress","setProgress","sortbutton","setSortButton","showSortComponent","setShowSortComponent","favorites","setFavorites","showFavorites","setShowFavorites","fetchBooks","duration","startTime","Date","now","updateProgress","currentTime","elapsedTime","percentage","Math","min","progressInterval","setInterval","response","get","clearInterval","console","log","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","toFixed","map","favoriteBook","index","book","nr","id","_c","$RefreshReg$"],"sources":["C:/Users/arbre/OneDrive/Desktop/inspire11mk-internship-arbresha-ajrulla/finalreact2/src/components/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport BookCard from \"./BookCard\";\r\nimport axios from \"axios\";\r\nimport SortBookCards from \"./SortBookCard\";\r\n\r\nfunction App() {\r\n  const [books, setBooks] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [sortbutton, setSortButton] = useState(false);\r\n  const [showSortComponent, setShowSortComponent] = useState(false);\r\n  const [favorites, setFavorites] = useState([]);\r\n  const [showFavorites, setShowFavorites] = useState(false);\r\n\r\n  const fetchBooks = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setProgress(0);\r\n\r\n      // Simulate a 3-second delay\r\n      const duration = 3000;\r\n      const startTime = Date.now();\r\n\r\n      // Function to update progress\r\n      const updateProgress = () => {\r\n        const currentTime = Date.now();\r\n        const elapsedTime = currentTime - startTime;\r\n        const percentage = Math.min((elapsedTime / duration) * 100, 100);\r\n        setProgress(percentage);\r\n      };\r\n\r\n      // Start updating progress every 100 milliseconds\r\n      const progressInterval = setInterval(updateProgress, 100);\r\n\r\n      const response = await axios.get(\r\n        \"https://www.anapioficeandfire.com/api/books?pageSize=30\"\r\n      );\r\n\r\n      // Clear the progress update interval when the request is complete\r\n      clearInterval(progressInterval);\r\n\r\n      console.log(response.data);\r\n      setBooks(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n      // Set progress to 100% when data fetching is complete\r\n      setProgress(100);\r\n      setShowSortComponent(true);\r\n      setSortButton(false); // Reset sortbutton to false when fetching new data\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/* Main heading */}\r\n      <h1>Game of Thrones Books</h1>\r\n  \r\n      {/* Subheading */}\r\n      <h2>Fetch a list from an API and display it</h2>\r\n  \r\n      {/* Fetch button */}\r\n      <button\r\n        className=\"fetch-button\"\r\n        onClick={fetchBooks}\r\n        disabled={loading}\r\n      >\r\n        {/* Conditional rendering based on \"loading\" state */}\r\n        {loading ? (\r\n          // Display a spinner when loading\r\n          <div className=\"spinner\"></div>\r\n        ) : progress === 100 ? (\r\n          // Display \"Books\" when progress is 100%\r\n          \"Books\"\r\n        ) : (\r\n          // Display \"Fetch Data\" otherwise\r\n          \"Fetch Data\"\r\n        )}\r\n        {/* Display progress percentage */}\r\n        <div className=\"percentage\">{progress.toFixed(0)}%</div>\r\n      </button>\r\n      <br />\r\n  \r\n      <div className=\"button-container\">\r\n        {/* Toggle \"showFavorites\" state */}\r\n        <button\r\n          className=\"buttons\"\r\n          onClick={() => setShowFavorites(!showFavorites)}\r\n        >\r\n          Favorites\r\n        </button>\r\n  \r\n        {/* Conditional rendering of \"Sort\" button based on state */}\r\n        {showSortComponent && !sortbutton && (\r\n          <button className=\"buttons\" onClick={() => setSortButton(true)}>\r\n            Sort\r\n          </button>\r\n        )}\r\n      </div>\r\n  \r\n      {/* Conditional rendering of favorite books */}\r\n      {showFavorites && (\r\n        <div className=\"grid-container\">\r\n          {/* Map and render favorite books using \"BookCard\" component */}\r\n          {favorites.map((favoriteBook, index) => (\r\n            <div key={favoriteBook.id}>\r\n                <h3>The </h3>\r\n              <BookCard\r\n                book={favoriteBook}\r\n                nr={index + 1}\r\n                favorites={favorites}\r\n                setFavorites={setFavorites}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n  \r\n      {/* Conditional rendering of sorted or unsorted books */}\r\n      {showSortComponent && !showFavorites && (\r\n        <div className=\"button-container\">\r\n          {sortbutton ? (\r\n            <div className=\"grid-container\">\r\n              {/* Render sorted books using \"SortBookCards\" component */}\r\n              <SortBookCards books={books} key={books.id} />\r\n            </div>\r\n          ) : (\r\n            <div className=\"grid-container\">\r\n              {/* Map and render unsorted books using \"BookCard\" component */}\r\n              {books.map((book, index) => (\r\n                <BookCard\r\n                  book={book}\r\n                  key={book.id}\r\n                  nr={index + 1}\r\n                  favorites={favorites}\r\n                  setFavorites={setFavorites}\r\n                />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n  \r\n              }\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}